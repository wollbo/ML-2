% maxsum
addpath datasets/image
folder = 'datasets/image';
imageMatrix = imread([folder '/lena_std'],'tif');

L = length(imageMatrix);
imageMatrix = rgb2gray(imageMatrix);
trueMatrix = imageMatrix;
N = 256; %8bit

%%

noiseMatrix = randn(512)*0.1;
gaussianMatrix = round(double(imageMatrix) + noiseMatrix);

%% p(y|x) assuming x uniformly distributed

support = 1:256;
K = length(support);
priorProb = zeros(K);
for k = 1:K
    priorProb(k,:) = normpdf(support,support(k),2); % gaussian noise case
end

%% p(x(k)|x(k-1)) from histogram

kminusCounts = zeros(K);
for l = 2:L^2
kminusCounts(imageChain(l),imageChain(l-1)) = kminusCounts(imageChain(l),imageChain(l-1)) + 1;
end
histProbs = kminusCounts;
for k = 1:K
    if sum(histProbs(k,:))>0
        histProbs(k,:) = histProbs(k,:)./sum(histProbs(k,:));% represents p(x_k = i | x_k-1 = j) in matrix form K_ij
    end 
end
%surf(kminusCounts)
%%

mu